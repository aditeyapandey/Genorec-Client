{"ast":null,"code":"var _jsxFileName = \"/Users/aditeyapandey/Documents/genorec/src/encodingselection/encoding.js\";\nimport React from 'react';\n\nclass Encoding extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStatus = val => {\n      if (val == \"task1\") {\n        this.setState({\n          \"task1\": !this.state.task1\n        });\n      }\n\n      if (val == \"task2\") {\n        this.setState({\n          \"task2\": !this.state.task2\n        });\n      }\n    };\n\n    this.state = {\n      task1: false,\n      task2: false,\n      task3: false,\n      task4: false\n    };\n    this.changeStatus = this.changeStatus.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-row-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \" Stage 1: Enconding Selection\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-bar w3-light-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"w3-bar-item w3-button tablink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Feature 1\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"w3-bar-item w3-button tablink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Feature 2\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"w3-bar-item w3-button tablink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Feature 3\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-col s9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"1. Select the tasks.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-row-padding w3-padding-16\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TaskInput, {\n      id: \"fname1\",\n      status: this.state.task1,\n      name: \"task1\",\n      changeStatus: this.changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TaskInput, {\n      id: \"fname2\",\n      status: this.state.task2,\n      name: \"task2\",\n      changeStatus: this.changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TaskInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TaskInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-col w3-center s3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Encoding Options\"), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(EncodingOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nfunction TaskInput(props) {\n  function handleChange() {\n    props.changeStatus(props.name);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"w3-col s3 w3-margin-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"w3-container w3-white\",\n    style: props.status ? {\n      \"border-style\": \"solid\",\n      \"border-color\": \"#80b1d3\"\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Identify\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../assets/test.png'),\n    alt: \"Norway\",\n    style: {\n      \"width\": \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Few words to explain the task.Few words to explain the task.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"w3-opacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Examples: Functional Annotation, Find the Epigenetic Signal Value\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleChange,\n    class: \"w3-button w3-block w3-indigo w3-margin-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Select\")));\n}\n\nfunction EncodingOptions() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"w3-col s5 w3-margin w3-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../assets/scatterplot.jpg'),\n    alt: \"Norway\",\n    style: {\n      \"width\": \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Encoding;","map":{"version":3,"sources":["/Users/aditeyapandey/Documents/genorec/src/encodingselection/encoding.js"],"names":["React","Encoding","Component","constructor","props","changeStatus","val","setState","state","task1","task2","task3","task4","bind","render","TaskInput","handleChange","name","status","require","EncodingOptions"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Encoding  extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {task1:false, task2: false, task3: false, task4:false};\n        this.changeStatus = this.changeStatus.bind(this)\n      }\n\n      changeStatus = (val) =>{\n          if(val==\"task1\"){\n          this.setState({\"task1\":!this.state.task1})}\n          if(val==\"task2\"){\n            this.setState({\"task2\":!this.state.task2})}\n      }\n\n    render(){\n    return(\n        <>\n            <div className=\"w3-row-padding\">\n            <h3> Stage 1: Enconding Selection</h3>\n\n            <div className=\"w3-bar w3-light-grey\">\n            <button  className=\"w3-bar-item w3-button tablink\" >Feature 1</button>\n            <button  className=\"w3-bar-item w3-button tablink\" >Feature 2</button>\n            <button className=\"w3-bar-item w3-button tablink\" >Feature 3</button>\n            </div>\n\n            <div className=\"w3-col s9\">\n     \n            <h3>1. Select the tasks.</h3>\n            <div className=\"w3-row-padding w3-padding-16\">\n                <TaskInput id=\"fname1\" status={this.state.task1} name=\"task1\" changeStatus={this.changeStatus}/>\n                <TaskInput id=\"fname2\" status={this.state.task2} name=\"task2\" changeStatus={this.changeStatus}/>\n                <TaskInput/>\n                <TaskInput/>\n            </div>\n            </div>\n            <div className=\"w3-col w3-center s3\">\n            <h3>Encoding Options</h3>\n\n                <EncodingOptions />\n                <EncodingOptions />\n                <EncodingOptions />\n                <EncodingOptions />\n                <EncodingOptions />\n                <EncodingOptions />\n                <EncodingOptions />\n                <EncodingOptions />\n\n            </div>\n            </div>             \n        </>\n    )\n    }\n}\n\nfunction TaskInput(props){\n\n   function handleChange () {\n    props.changeStatus(props.name)           \n    }    \n\n    return(\n        <div class=\"w3-col s3 w3-margin-bottom\">\n        <div class=\"w3-container w3-white\" style = {props.status ? {\"border-style\":\"solid\", \"border-color\":\"#80b1d3\"}:{}} >\n            <h4>Identify</h4>\n            <img src={ require('../assets/test.png') } alt=\"Norway\" style={{\"width\":\"100%\"}}/>\n            <p>Few words to explain the task.Few words to explain the task.</p>\n            <h6 class=\"w3-opacity\">Examples: Functional Annotation, Find the Epigenetic Signal Value</h6>\n            <button onClick={handleChange} class=\"w3-button w3-block w3-indigo w3-margin-bottom\">Select</button>\n        </div>\n        </div>\n    )\n}\n\nfunction EncodingOptions(){\n\n    return (\n        <div class=\"w3-col s5 w3-margin w3-border\">\n            <img src={ require('../assets/scatterplot.jpg') } alt=\"Norway\" style={{\"width\":\"100%\"}}/>\n\n        </div>\n    )\n}\n\nexport default Encoding;"]},"metadata":{},"sourceType":"module"}