{"ast":null,"code":"var _jsxFileName = \"/Users/aditeyapandey/Documents/Genorec_Client/src/encodingselection/encoding.js\";\nimport React from 'react';\nimport * as data from './data.js';\n\nclass Encoding extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStatus = val => {\n      if (val == \"task1\") {\n        this.setState({\n          \"task1\": !this.state.task1\n        });\n      }\n\n      if (val == \"task2\") {\n        this.setState({\n          \"task2\": !this.state.task2\n        });\n      }\n    };\n\n    this.state = {\n      task1: false,\n      task2: false,\n      task3: false,\n      task4: false\n    };\n    this.changeStatus = this.changeStatus.bind(this);\n  }\n\n  openCity(evt, name) {\n    var i, tablinks;\n    var x = document.getElementsByClassName(\"FeatureInput\");\n\n    for (i = 0; i < x.length; i++) {\n      x[i].style.display = \"none\";\n    }\n\n    tablinks = document.getElementsByClassName(\"tablink\");\n\n    for (i = 0; i < x.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" w3-grey\", \"\");\n    }\n\n    if (document.getElementById(name)) {\n      document.getElementById(name).style.display = \"block\";\n    }\n\n    evt.currentTarget.className += \" w3-grey\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-row-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \" Stage 1: Enconding Selection\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w3-bar w3-light-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.openCity(e, \"Fname2\"),\n      className: \"w3-bar-item w3-button w3-grey tablink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Feature 1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.openCity(e, \"Fname2\"),\n      className: \"w3-bar-item w3-button tablink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Feature 2\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.openCity(e, \"Fname3\"),\n      className: \"w3-bar-item w3-button tablink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Feature 3\")), /*#__PURE__*/React.createElement(FeatureInputOutput, {\n      id: \"Fname1\",\n      display: \"\",\n      taskval: this.state,\n      changeStatus: this.changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FeatureInputOutput, {\n      id: \"Fname2\",\n      display: \"none\",\n      taskval: this.state,\n      changeStatus: this.changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FeatureInputOutput, {\n      id: \"Fname3\",\n      display: \"none\",\n      taskval: this.state,\n      changeStatus: this.changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nfunction TaskInput(props) {\n  function handleChange() {\n    props.changeStatus(props.name);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"w3-col s3 w3-margin-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"w3-container w3-white\",\n    style: props.status ? {\n      \"border-style\": \"solid\",\n      \"border-color\": \"#80b1d3\"\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Identify\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../assets/test.png'),\n    alt: \"Norway\",\n    style: {\n      \"width\": \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Few words to explain the task.Few words to explain the task.\"), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"w3-opacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Examples: Functional Annotation, Find the Epigenetic Signal Value\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleChange,\n    class: \"w3-button w3-block w3-indigo w3-margin-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Select\")));\n}\n\nfunction EncodingOptions(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"w3-col s5 w3-margin w3-hover-opacity w3-border w3-border-gray w3-hover-border-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imgName,\n    alt: \"Norway\",\n    style: {\n      \"width\": \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction FeatureInputOutput(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: props.id,\n    className: \"FeatureInput\",\n    style: {\n      \"display\": props.display\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-col s9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"1. Select the tasks.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-row-padding w3-padding-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TaskInput, {\n    status: props.taskval.task1,\n    name: \"task1\",\n    changeStatus: props.changeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TaskInput, {\n    status: props.taskval.task2,\n    name: \"task2\",\n    changeStatus: props.changeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TaskInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TaskInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w3-col w3-center s3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Encoding Options\"), data.encodingOptions.map(val => {\n    return /*#__PURE__*/React.createElement(EncodingOptions, {\n      imgName: val,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    });\n  })));\n}\n\nexport default Encoding;","map":{"version":3,"sources":["/Users/aditeyapandey/Documents/Genorec_Client/src/encodingselection/encoding.js"],"names":["React","data","Encoding","Component","constructor","props","changeStatus","val","setState","state","task1","task2","task3","task4","bind","openCity","evt","name","i","tablinks","x","document","getElementsByClassName","length","style","display","className","replace","getElementById","currentTarget","render","e","TaskInput","handleChange","status","require","EncodingOptions","imgName","FeatureInputOutput","id","taskval","encodingOptions","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as data from './data.js'; \n\n\nclass Encoding extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {task1:false, task2: false, task3: false, task4:false};\n        this.changeStatus = this.changeStatus.bind(this)\n      }\n\n      changeStatus = (val) =>\n      {\n          if(val==\"task1\"){\n          this.setState({\"task1\":!this.state.task1})}\n          if(val==\"task2\"){\n            this.setState({\"task2\":!this.state.task2})}\n      }\n\n      openCity(evt,name) \n      {\n        var i,tablinks;\n        var x = document.getElementsByClassName(\"FeatureInput\");\n        for (i = 0; i < x.length; i++) {\n          x[i].style.display = \"none\";\n        }\n        \n       tablinks = document.getElementsByClassName(\"tablink\");\n            for (i = 0; i < x.length; i++) {\n                tablinks[i].className = tablinks[i].className.replace(\" w3-grey\", \"\");\n            }\n\n        if(document.getElementById(name))     \n            {document.getElementById(name).style.display = \"block\";}\n            evt.currentTarget.className += \" w3-grey\";\n\n    }      \n\n    render(){\n    return(\n        <>\n            <div className=\"w3-row-padding\">\n            <h3> Stage 1: Enconding Selection</h3>\n\n            <div className=\"w3-bar w3-light-grey\">\n            <button  onClick={(e) => this.openCity(e,\"Fname2\")} className=\"w3-bar-item w3-button w3-grey tablink\" >Feature 1</button>\n            <button  onClick={(e) => this.openCity(e,\"Fname2\")} className=\"w3-bar-item w3-button tablink\" >Feature 2</button>\n            <button  onClick={(e) => this.openCity(e,\"Fname3\")} className=\"w3-bar-item w3-button tablink\" >Feature 3</button>\n            </div>\n            <FeatureInputOutput id={\"Fname1\"} display={\"\"} taskval={this.state} changeStatus={this.changeStatus}/>\n            <FeatureInputOutput id={\"Fname2\"} display={\"none\"} taskval={this.state} changeStatus={this.changeStatus}/>\n            <FeatureInputOutput id={\"Fname3\"} display={\"none\"} taskval={this.state} changeStatus={this.changeStatus}/>\n\n            </div>             \n        </>\n    )\n    }\n}\n\nfunction TaskInput(props){\n\n   function handleChange () {\n    props.changeStatus(props.name)           \n    }    \n\n    return(\n        <div class=\"w3-col s3 w3-margin-bottom\">\n        <div class=\"w3-container w3-white\" style = {props.status ? {\"border-style\":\"solid\", \"border-color\":\"#80b1d3\"}:{}} >\n            <h4>Identify</h4>\n            <img src={ require('../assets/test.png') } alt=\"Norway\" style={{\"width\":\"100%\"}}/>\n            <p>Few words to explain the task.Few words to explain the task.</p>\n            <h6 class=\"w3-opacity\">Examples: Functional Annotation, Find the Epigenetic Signal Value</h6>\n            <button onClick={handleChange} class=\"w3-button w3-block w3-indigo w3-margin-bottom\">Select</button>\n        </div>\n        </div>\n    )\n}\n\nfunction EncodingOptions(props){\n    return (\n        <div class=\"w3-col s5 w3-margin w3-hover-opacity w3-border w3-border-gray w3-hover-border-red\">\n            <img src={ props.imgName } alt=\"Norway\" style={{\"width\":\"100%\"}}/>\n\n        </div>\n    )\n}\n\nfunction FeatureInputOutput(props){\n    return(\n        <div id={props.id} className=\"FeatureInput\" style={{\"display\":props.display}}>\n             <div className=\"w3-col s9\">\n\n                <h3>1. Select the tasks.</h3>\n                <div className=\"w3-row-padding w3-padding-16\">\n                    <TaskInput  status={props.taskval.task1} name=\"task1\" changeStatus={props.changeStatus}/>\n                    <TaskInput  status={props.taskval.task2} name=\"task2\" changeStatus={props.changeStatus}/>\n                    <TaskInput/>\n                    <TaskInput/>\n                </div>\n            </div>\n                <div className=\"w3-col w3-center s3\">\n                <h3>Encoding Options</h3>\n                    {data.encodingOptions.map((val) => {\n                    return <EncodingOptions imgName={val} />\n                })}\n                </div>\n        </div>\n    )\n}\n\nexport default Encoding;"]},"metadata":{},"sourceType":"module"}