{"ast":null,"code":"const cartesian = require(\"./utils.js\").cartesian; //Superimposable encodings\n\n\nvar superimposition = {\n  \"dotplot\": [\"dotplot\", \"linechart\", \"barsize\"],\n  \"linechart\": [\"linechart\", \"dotplot\", \"barsize\"],\n  \"barsize\": [\"dotplot\", \"linechart\"]\n}; //Description: Get the alignment of the encoding\n//Input: Two or more elements in the array\n//Output: stacked or superimposed\n\nfunction returnAlignmentChoice(input) {\n  //Base case only one encoding\n  if (input.length < 2) {\n    return \"stacked\";\n  } //First check if all the input elements have samelayout have the same layout\n\n\n  const allEqual = arr => arr.every(v => v === arr[0]);\n\n  if (!allEqual) {\n    return \"stacked\";\n  } //Check superimposition\n\n}\n\nfunction getAlignment(stage3Output) {\n  // Get the tracks from each feature\n  var tracksPerFeature = [];\n  Object.keys(stage3Output).map(val => {\n    tracksPerFeature.push(stage3Output[val]);\n  });\n  var possibleCombination = cartesian(tracksPerFeature);\n  possibleCombination.forEach(val => {\n    console.log(val);\n    var alignment = returnAlignmentChoice(val);\n  });\n}\n\nmodule.exports = getAlignment;","map":{"version":3,"sources":["/Users/aditeyapandey/Documents/Genorec_Client/node_modules/my-package/src/s4_al.js"],"names":["cartesian","require","superimposition","returnAlignmentChoice","input","length","allEqual","arr","every","v","getAlignment","stage3Output","tracksPerFeature","Object","keys","map","val","push","possibleCombination","forEach","console","log","alignment","module","exports"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,SAAxC,C,CAEA;;;AACA,IAAIE,eAAe,GAAG;AAClB,aAAW,CAAC,SAAD,EAAW,WAAX,EAAuB,SAAvB,CADO;AAElB,eAAa,CAAC,WAAD,EAAa,SAAb,EAAuB,SAAvB,CAFK;AAGlB,aAAU,CAAC,SAAD,EAAW,WAAX;AAHQ,CAAtB,C,CAQA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BC,KAA/B,EACA;AACI;AACA,MAAGA,KAAK,CAACC,MAAN,GAAa,CAAhB,EAAkB;AACd,WAAO,SAAP;AACH,GAJL,CAMI;;;AACA,QAAMC,QAAQ,GAAGC,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAWC,CAAC,IAAIA,CAAC,KAAKF,GAAG,CAAC,CAAD,CAAzB,CAAxB;;AACA,MAAG,CAACD,QAAJ,EACA;AACI,WAAO,SAAP;AACH,GAXL,CAaI;;AACH;;AAED,SAASI,YAAT,CAAuBC,YAAvB,EACA;AAEI;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,GAA1B,CAA8BC,GAAG,IAAE;AAC/BJ,IAAAA,gBAAgB,CAACK,IAAjB,CAAsBN,YAAY,CAACK,GAAD,CAAlC;AACH,GAFD;AAIA,MAAIE,mBAAmB,GAAGlB,SAAS,CAACY,gBAAD,CAAnC;AAEAM,EAAAA,mBAAmB,CAACC,OAApB,CAA4BH,GAAG,IAAG;AAC9BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,QAAIM,SAAS,GAAGnB,qBAAqB,CAACa,GAAD,CAArC;AACH,GAHD;AAKH;;AAEDO,MAAM,CAACC,OAAP,GAAiBd,YAAjB","sourcesContent":["const cartesian = require(\"./utils.js\").cartesian\n\n//Superimposable encodings\nvar superimposition = {\n    \"dotplot\": [\"dotplot\",\"linechart\",\"barsize\"],\n    \"linechart\": [\"linechart\",\"dotplot\",\"barsize\"],\n    \"barsize\":[\"dotplot\",\"linechart\"],\n}\n\n\n\n//Description: Get the alignment of the encoding\n//Input: Two or more elements in the array\n//Output: stacked or superimposed\nfunction returnAlignmentChoice(input)\n{\n    //Base case only one encoding\n    if(input.length<2){\n        return \"stacked\"\n    }\n\n    //First check if all the input elements have samelayout have the same layout\n    const allEqual = arr => arr.every( v => v === arr[0] )\n    if(!allEqual)\n    {\n        return \"stacked\"\n    }\n\n    //Check superimposition\n}\n\nfunction getAlignment (stage3Output)\n{\n\n    // Get the tracks from each feature\n    var tracksPerFeature = []\n    Object.keys(stage3Output).map(val=>{\n        tracksPerFeature.push(stage3Output[val])\n    })\n\n    var possibleCombination = cartesian(tracksPerFeature)\n    \n    possibleCombination.forEach(val =>{\n        console.log(val)\n        var alignment = returnAlignmentChoice(val)\n    })\n\n}\n\nmodule.exports = getAlignment"]},"metadata":{},"sourceType":"script"}