{"ast":null,"code":"var Dataspec = require('./dataspec.js');\n\nvar encodeAttribute = require(\"./s1_en.js\");\n\nvar getTracks = require(\"./s2_ca.js\");\n\nvar inputData = require(\"../configuration/input.json\");\n\nvar getLayout = require(\"./s3_ls.js\");\n\nvar getAlignment = require(\"./s4_al.js\"); //Validate the input dataspecification to ensure correctness of input data\n// const dataspec = Dataspec(inputData)\n// console.log(dataspec)\n// // //First determine sequence level encoding\n// for (var i=0;i<dataspec.length;i++){\n//     //Stage 1: Encoding Selection\n//     var attributeEncoding = encodeAttribute(dataspec[i]);\n//     //Stage 2: Combining Attributes\n//     var tracks = getTracks(attributeEncoding)\n//     //Stage 3: Predict the Layout\n//     var layout = getLayout(tracks, attributeEncoding)\n//     //Stage 4: Alignment \n//     // var finalSequence = getAlignment(layout)\n// }\n\n\nfunction setInput(param) {\n  //Validate the input dataspecification to ensure correctness of input data\n  const dataspec = Dataspec(param); //Test output only for 1 sequence\n\n  var attributeEncoding, tracks, layout; // //First determine sequence level encoding\n\n  for (var i = 0; i < dataspec.length; i++) {\n    //Stage 1: Encoding Selection\n    var attributeEncoding = encodeAttribute(dataspec[i]); //Stage 2: Combining Attributes\n\n    var tracks = getTracks(attributeEncoding); //Stage 3: Predict the Layout\n\n    var layout = getLayout(tracks, attributeEncoding); //Stage 4: Alignment \n    // var finalSequence = getAlignment(layout)\n  }\n\n  return {\n    attributeEncoding,\n    tracks,\n    layout\n  };\n} //Define the libary's api for external applications\n\n\nmodule.exports = {\n  setInput\n};","map":{"version":3,"sources":["/Users/aditeyapandey/Documents/Genorec_Client/node_modules/genorec-engine/src/index.js"],"names":["Dataspec","require","encodeAttribute","getTracks","inputData","getLayout","getAlignment","setInput","param","dataspec","attributeEncoding","tracks","layout","i","length","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIC,eAAe,GAAID,OAAO,CAAC,YAAD,CAA9B;;AACA,IAAIE,SAAS,GAAIF,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,6BAAD,CAAvB;;AACA,IAAII,SAAS,GAAIJ,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIK,YAAY,GAAGL,OAAO,CAAC,YAAD,CAA1B,C,CAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA,QAAMC,QAAQ,GAAGT,QAAQ,CAACQ,KAAD,CAAzB,CAFqB,CAGrB;;AACA,MAAIE,iBAAJ,EAAsBC,MAAtB,EAA6BC,MAA7B,CAJqB,CAMrB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACJ,QAAQ,CAACK,MAAxB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/B;AACA,QAAIH,iBAAiB,GAAGR,eAAe,CAACO,QAAQ,CAACI,CAAD,CAAT,CAAvC,CAF+B,CAG/B;;AACA,QAAIF,MAAM,GAAGR,SAAS,CAACO,iBAAD,CAAtB,CAJ+B,CAK/B;;AACA,QAAIE,MAAM,GAAGP,SAAS,CAACM,MAAD,EAASD,iBAAT,CAAtB,CAN+B,CAO/B;AACA;AACH;;AACD,SAAO;AAACA,IAAAA,iBAAD;AAAmBC,IAAAA,MAAnB;AAA0BC,IAAAA;AAA1B,GAAP;AACH,C,CAED;;;AACAG,MAAM,CAACC,OAAP,GAAgB;AAChBT,EAAAA;AADgB,CAAhB","sourcesContent":["var Dataspec = require('./dataspec.js')\nvar encodeAttribute  = require(\"./s1_en.js\")\nvar getTracks  = require(\"./s2_ca.js\")\nvar inputData = require(\"../configuration/input.json\")\nvar getLayout  = require(\"./s3_ls.js\")\nvar getAlignment = require(\"./s4_al.js\")\n\n//Validate the input dataspecification to ensure correctness of input data\n// const dataspec = Dataspec(inputData)\n\n// console.log(dataspec)\n\n// // //First determine sequence level encoding\n// for (var i=0;i<dataspec.length;i++){\n//     //Stage 1: Encoding Selection\n//     var attributeEncoding = encodeAttribute(dataspec[i]);\n//     //Stage 2: Combining Attributes\n//     var tracks = getTracks(attributeEncoding)\n//     //Stage 3: Predict the Layout\n//     var layout = getLayout(tracks, attributeEncoding)\n//     //Stage 4: Alignment \n//     // var finalSequence = getAlignment(layout)\n// }\n\n\nfunction setInput(param) {\n    //Validate the input dataspecification to ensure correctness of input data\n    const dataspec = Dataspec(param)\n    //Test output only for 1 sequence\n    var attributeEncoding,tracks,layout\n\n    // //First determine sequence level encoding\n    for (var i=0;i<dataspec.length;i++){\n        //Stage 1: Encoding Selection\n        var attributeEncoding = encodeAttribute(dataspec[i]);\n        //Stage 2: Combining Attributes\n        var tracks = getTracks(attributeEncoding)\n        //Stage 3: Predict the Layout\n        var layout = getLayout(tracks, attributeEncoding)\n        //Stage 4: Alignment \n        // var finalSequence = getAlignment(layout)\n    }\n    return {attributeEncoding,tracks,layout}\n}  \n\n//Define the libary's api for external applications\nmodule.exports ={\nsetInput\n}"]},"metadata":{},"sourceType":"script"}